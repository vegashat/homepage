{"ast":null,"code":"import { interval, timer, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/rss.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ReaderComponent_div_13_mat_list_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\", 12);\n    i0.ɵɵtext(2, \"all_out\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mde-popover\", 14, 15);\n    i0.ɵɵelementStart(7, \"mat-card\", 16);\n    i0.ɵɵelementStart(8, \"mat-card-content\");\n    i0.ɵɵelement(9, \"div\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const entry_r2 = ctx.$implicit;\n\n    const _r3 = i0.ɵɵreference(6);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mdePopoverTriggerFor\", _r3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", entry_r2.link, i0.ɵɵsanitizeUrl)(\"title\", entry_r2.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(entry_r2.formattedTitle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mdePopoverOverlapTrigger\", false);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"innerHTML\", entry_r2.description, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ReaderComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"mat-list\", 10);\n    i0.ɵɵtemplate(2, ReaderComponent_div_13_mat_list_item_2_Template, 10, 6, \"mat-list-item\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.entries);\n  }\n}\n\nexport let ReaderComponent = /*#__PURE__*/(() => {\n  class ReaderComponent {\n    constructor(_service) {\n      this._service = _service;\n      this.feedUrl = \"\";\n      this.title = \"\";\n      this.count = 10;\n      this.siteUrl = \"\";\n      this.entries = [];\n      this._interval = 60 * 5 * 1000;\n      this._subscription = new Subscription();\n      this._subscribed = false;\n      this._countdown = new Subscription();\n      this.remainingMin = 0;\n    }\n\n    ngOnInit() {\n      this.setInterval();\n      this.getEntries();\n    }\n\n    getEntries() {\n      if (this._subscribed) {\n        this.unsubscribe();\n        this.setInterval();\n      }\n\n      var observable = timer(0, this._interval);\n      this._subscription = observable.subscribe(() => {\n        this._service.getFeed(this.feedUrl, this.count).subscribe(data => {\n          this.entries = data;\n          this.setInterval();\n        });\n      });\n      this._subscribed = true;\n      var int = interval(1000 * 60).pipe(map(() => {\n        return --this.remainingMin;\n      })); //TODO - Should be able to do this easier\n\n      this._countdown = int.subscribe(() => {});\n    }\n\n    setInterval() {\n      this.remainingMin = this._interval / 60 / 1000;\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe();\n    }\n\n    unsubscribe() {\n      this._subscription.unsubscribe();\n\n      this._countdown.unsubscribe();\n    }\n\n  }\n\n  ReaderComponent.ɵfac = function ReaderComponent_Factory(t) {\n    return new (t || ReaderComponent)(i0.ɵɵdirectiveInject(i1.RssService));\n  };\n\n  ReaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReaderComponent,\n    selectors: [[\"app-reader\"]],\n    inputs: {\n      feedUrl: \"feedUrl\",\n      title: \"title\",\n      count: \"count\",\n      siteUrl: \"siteUrl\"\n    },\n    decls: 14,\n    vars: 4,\n    consts: [[1, \"reader-card\"], [1, \"card-title\"], [\"target\", \"_blank\", 3, \"href\"], [1, \"example-fill-remaining-space\"], [1, \"refresh\"], [1, \"refresh-text\"], [1, \"clickable\", 3, \"click\"], [1, \"card-content\"], [\"class\", \"entry\", 4, \"ngIf\"], [1, \"entry\"], [\"dense\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"mdePopoverTriggerOn\", \"click\", \"matListIcon\", \"\", 1, \"clickable\", 3, \"mdePopoverTriggerFor\"], [\"target\", \"_blank\", 1, \"title\", 3, \"href\", \"title\"], [3, \"mdePopoverOverlapTrigger\"], [\"entryDescriptionPopup\", \"mdePopover\"], [2, \"max-width\", \"300px\"], [1, \"tiny-desc\", 3, \"innerHTML\"]],\n    template: function ReaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"mat-card-title\", 1);\n        i0.ɵɵelementStart(2, \"span\");\n        i0.ɵɵelementStart(3, \"a\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"span\", 3);\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"span\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-icon\", 6);\n        i0.ɵɵlistener(\"click\", function ReaderComponent_Template_mat_icon_click_9_listener() {\n          return ctx.getEntries();\n        });\n        i0.ɵɵtext(10, \"refresh\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"mat-divider\");\n        i0.ɵɵelementStart(12, \"mat-card-content\", 7);\n        i0.ɵɵtemplate(13, ReaderComponent_div_13_Template, 3, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"href\", ctx.siteUrl, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Refreshes in \", ctx.remainingMin, \" min.\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.entries);\n      }\n    },\n    directives: [i2.NgIf, i2.NgForOf],\n    styles: [\"img{height:auto;width:auto;max-height:120px;max-width:120px}.title{margin:10px;font-size:1.1em}.mat-list-item{height:30px!important}.mat-list-item-content{padding:2px!important}.reader-card{margin:5px;padding:5px}.refresh{font-size:.5em;position:absolute;right:10px;top:25px}.refresh *{vertical-align:middle}.refresh-text{padding-bottom:15px;border-bottom:1px}\\n\"],\n    encapsulation: 2\n  });\n  return ReaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}